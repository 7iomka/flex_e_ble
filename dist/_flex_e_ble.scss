// Must be added to html tag either manaully or feature detect eg modernizr
$flexbox-enable-class: '.flexbox' !default;
$special-font-stack: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif !default;

$total-columns: 12 !default;

// Change to make grid break inclusive or exculsive


$column-gutter: 15px !default;
$auto-column-gutters: false !default;
$grid-padding-name: 'pad' !default;
$independant-grid-definition: false !default;

// Use to namespace the whole grid-system. eg 'wtf-' or 'cool-'
$global-name-space: '' !default;
$container-name: 'container' !default; // Could be wrapper
$grid-name: 'grid-' !default; // Could be col or column
$default-grid-name: '' !default;
$row-name: 'row' !default; // Could be flex
$right-name: 'right' !default; // Could be push
$left-name: 'left' !default; // Could be push

// Loop over these breakpoints and pass keys into grid classes
$breakpoints: (
  'sm': 480px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1180px
) !default;

$break-dir: '>=' !default;

$enable-extra-grid: false !default;
$extra-grid-name: 'fifth' !default;
$extra-columns: 5 !default;

@mixin build-row() {
  letter-spacing: -0.31em; /* Webkit: collapse white-space between units */
  text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */
  box-sizing: border-box;
  position: relative;
  display: block;
}

@mixin build-flex-row() {
  display: flex;
  flex-flow: row wrap;

  display: -ms-flexbox;
  -ms-flex-flow: row wrap;
}

@mixin build-grid() {
  box-sizing: border-box;
  display: inline-block;
  letter-spacing: normal;
  word-spacing: normal;
  vertical-align: top;
  text-rendering: auto;
}

@function grid-size($n) {
  @return percentage( $n / $total-columns)
}

@function grid-size-special($n) {
  @return percentage( $n / $extra-columns)
}

@mixin build-column-gutter() {

  $smallest-size: nth(nth($breakpoints, 1),1);

  padding-left: ($column-gutter / 2);
  padding-right: ($column-gutter / 2);

  @include media("screen", ">=#{$smallest-size}") {
    padding-left: ($column-gutter);
    padding-right: ($column-gutter);
  }
}

// see http://purecss.io/grids/#using-grids-with-custom-fonts
@if $independant-grid-definition {
  html,
  .#{$global-name-space}#{$row-name} [class*=#{$global-name-space}#{$grid-padding-name}-] {
    font-family: $special-font-stack;
  }

} @else {
  html,
  .#{$global-name-space}#{$row-name} [class*=#{$global-name-space}#{$grid-name}] {
    font-family: $special-font-stack;
  }
}

.#{$global-name-space}#{$container-name} {
  margin-left: auto;
  margin-right: auto;

  @each $size, $breakpoint in $breakpoints {
    @include media("screen", "#{$break-dir}#{$size}") {
      max-width: $breakpoint;
    }
  }
}

.#{$global-name-space}#{$row-name} {
  @include build-row();
  width: 100%;
}

#{$flexbox-enable-class} .#{$global-name-space}#{$row-name} {
  @include build-flex-row();

  // clearfix breaks flexgrid row
  &.clearfix:before, &.clearfix:after {
    content: initial;
  }
}

@if $independant-grid-definition == false {

  [class*=#{$global-name-space}#{$grid-name}] {
    @include build-grid();
    @if $auto-column-gutters {
      @include build-column-gutter()
    }

    // For grids that are also rows
    &.#{$global-name-space}#{$row-name} {
      @include build-row();
      display: inline-block;
    }

    #{$flexbox-enable-class} &.#{$global-name-space}#{$row-name} {
      @include build-flex-row();
    }
  }
}

.#{$global-name-space}#{$grid-padding-name} {
  @include build-column-gutter()
  @if $independant-grid-definition {
    @include build-grid();
  }
}

@for $i from 1 through $total-columns {
  $local-size: grid-size($i);

  // Base grid
  .#{$global-name-space}#{$grid-name}#{$default-grid-name}#{$i} {
    width: $local-size;
  }

  // Offset right
  .#{$global-name-space}#{$grid-name}#{$default-grid-name}-#{$right-name}-#{$i} {
    margin-right: $local-size;
  }

  // Offset left
  .#{$global-name-space}#{$grid-name}#{$default-grid-name}-#{$left-name}-#{$i} {
    margin-left: $local-size;
  }
}

@each $size, $breakpoint in $breakpoints {
  @include media("screen", "#{$break-dir}#{$breakpoint}") {
    @for $i from 1 through $total-columns {
      $local-size: grid-size($i);
      // Responsive Grid

      .#{$global-name-space}#{$grid-name}#{$size}-#{$i} {
        width: $local-size;
      }
        // Responsive offset right
      .#{$global-name-space}#{$grid-name}#{$size}-#{$right-name}-#{$i} {
        margin-right: $local-size;
      }
        // Responsive offset left
      .#{$global-name-space}#{$grid-name}#{$size}-#{$left-name}-#{$i} {
        margin-left: $local-size;
      }
    }
  }
}

@if $enable-extra-grid {

  // Base grid
  @for $i from 1 through $extra-columns {
    .#{$global-name-space}#{$grid-name}#{$default-grid-name}-#{$i}-#{$extra-grid-name} {
      width: grid-size-special($i);
    }
  }

  @each $size, $breakpoint in $breakpoints {
    @include media("screen", "#{$break-dir}#{$breakpoint}") {
      @for $i from 1 through $extra-columns {
        .#{$global-name-space}#{$grid-name}#{$size}-#{$i}-#{$extra-grid-name} {
          width: grid-size-special($i);
        }
      }
    }
  }

}

.#{$global-name-space}#{$grid-name} {

  &left {
    right: auto
  }

  &right {
    left: auto
  }
}

#{$flexbox-enable-class} .#{$global-name-space}#{$grid-name} {

  &grow {
    flex-grow: 1;
  }

  &bottom {
    align-self: flex-end;
  }

  &left {
    margin-right: auto
  }

  &right {
    margin-left: auto
  }
}

.#{$global-name-space}#{$row-name} {

  &-right {
    text-align: right;
  }
  &-center {
    text-align: center;
  }
  &-left {
    text-align: left;
  }

  &-reverse {
    direction: rtl;
  }
}

// ordering of items flow
#{$flexbox-enable-class} .#{$global-name-space}#{$row-name} {

  &-right {
    justify-content: flex-end;
    text-align: inherit;
  }

  &-center {
    justify-content: center;
    text-align: inherit;
  }

  &-left {
    justify-content: flex-start;
    text-align: inherit;
  }

  &-bottom {
    align-content: flex-end;
  }

  &-between {
    justify-content: space-between;
  }

  &-around {
    justify-content: space-around;
  }
}
